language: cpp
sudo: false


cache:
  ccache: true
  directories:
    - $HOME/.ccache

env:
  global:
    - USE_CCACHE=1
    - CCACHE_COMPRESS=1
    - CCACHE_MAXSIZE=200M
    - CCACHE_CPP2=1


matrix:
  include:

    - os: linux
      compiler: clang
      env: COMPILER='clang++-3.5' BUILD_TYPE='Release'
      addons: &clang35
        apt:
          sources:
            - 'llvm-toolchain-precise-3.5'
            - 'ubuntu-toolchain-r-test'
          packages:
            - 'clang-3.5'
          packages: &deps
            - 'libgdal-dev'
            - 'libgeos++-dev'
            - 'libproj-dev'
            - 'libsparsehash-dev'
            - 'spatialite-bin'

    - os: linux
      compiler: clang
      env: COMPILER='clang++-3.5' BUILD_TYPE='Dev'
      addons: *clang35


    - os: linux
      compiler: clang
      env: COMPILER='clang++-3.6' BUILD_TYPE='Release'
      addons: &clang36
        apt:
          sources:
            - 'llvm-toolchain-precise-3.6'
            - 'ubuntu-toolchain-r-test'
          packages:
            - 'clang-3.5'
            - *deps

    - os: linux
      compiler: clang
      env: COMPILER='clang++-3.6' BUILD_TYPE='Dev'
      addons: *clang36


    - os: linux
      compiler: clang
      env: COMPILER='clang++-3.7' BUILD_TYPE='Release'
      addons: &clang37
        apt:
          sources:
            - 'llvm-toolchain-precise-3.7'
            - 'ubuntu-toolchain-r-test'
          packages:
            - 'clang-3.7'
            - *deps

    - os: linux
      compiler: clang
      env: COMPILER='clang++-3.7' BUILD_TYPE='Dev'
      addons: *clang37


    - os: linux
      compiler: gcc
      env: COMPILER='g++-4.8' COMPILER_FLAGS='-Wno-return-type' BUILD_TYPE='Release'
      addons: &gcc48
        apt:
          sources:
            - 'ubuntu-toolchain-r-test'
          packages:
            - 'g++-4.8'
            - *deps

    - os: linux
      compiler: gcc
      env: COMPILER='g++-4.8' COMPILER_FLAGS='-Wno-return-type' BUILD_TYPE='Dev'
      addons: *gcc48


    - os: linux
      compiler: gcc
      env: COMPILER='g++-4.9' BUILD_TYPE='Release'
      addons: &gcc49
        apt:
          sources:
            - 'ubuntu-toolchain-r-test'
          packages:
            - 'g++-4.9'
            - *deps

    - os: linux
      compiler: gcc
      env: COMPILER='g++-4.9' BUILD_TYPE='Dev'
      addons: *gcc49


    - os: linux
      compiler: gcc
      env: COMPILER='g++-5' BUILD_TYPE='Release'
      addons: &gcc5
        apt:
          sources:
            - 'ubuntu-toolchain-r-test'
          packages:
            - 'g++-5'
            - *deps

    - os: linux
      compiler: gcc
      env: COMPILER='g++-5' BUILD_TYPE='Dev'
      addons: *gcc5


    - os: osx
      osx_image: xcode6.4
      compiler: clang
      env: COMPILER='clang++' BUILD_TYPE='Dev'

    - os: osx
      osx_image: xcode6.4
      compiler: clang
      env: COMPILER='clang++' BUILD_TYPE='Release'


    - os: osx
      osx_image: xcode7
      compiler: clang
      env: COMPILER='clang++' BUILD_TYPE='Dev'

    - os: osx
      osx_image: xcode7
      compiler: clang
      env: COMPILER='clang++' BUILD_TYPE='Release'


install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  - git clone --quiet --depth 1 https://github.com/osmcode/osm-testdata.git
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew remove gdal
      brew install cmake boost ccache google-sparsehash gdal
    fi

before_script:
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir build && cd build
  - CXX="ccache ${COMPILER}" CXXFLAGS=${COMPILER_FLAGS} cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DOSM_TESTDATA="${TRAVIS_BUILD_DIR}/deps/osm-testdata"

script:
  - make --jobs=2
  - ccache --show-stats
  - ctest --output-on-failure
